<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontend on </title>
    <link>https://nenadlazic.github.io/tags/frontend/</link>
    <description>Recent content in Frontend on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nenadlazic.github.io/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reactivity in Vue.js</title>
      <link>https://nenadlazic.github.io/blog/reactivity-in-vue/</link>
      <pubDate>Fri, 25 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/reactivity-in-vue/</guid>
      <description>&lt;p&gt;One of the most powerful features of Vue.js and the reason why it feels so intuitive is its &lt;strong&gt;reactivity system&lt;/strong&gt;. It allows your UI to automatically update when the underlying data changes, without writing a single line of manual DOM manipulation.&lt;/p&gt;&#xA;&lt;p&gt;If youâ€™ve ever built complex user interfaces before reactive frameworks like Vue, you know the pain of keeping the UI in sync with application state manually juggling query selectors, event handlers, and state flags. It&amp;rsquo;s error-prone, hard to scale, and difficult to maintain.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue.js core concepts you must know</title>
      <link>https://nenadlazic.github.io/blog/vue-core-convepts/</link>
      <pubDate>Fri, 18 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://nenadlazic.github.io/blog/vue-core-convepts/</guid>
      <description>&lt;p&gt;Vue has captured the hearts of developers with its simplicity, efficiency, and adaptability. Whether you&amp;rsquo;re a newcomer to front-end development or an experienced programmer seeking a new tool, Vue.js offers an intuitive approach to building interactive and dynamic web applications.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, we&amp;rsquo;ll dive deeper into the &lt;strong&gt;philosophy behind Vue.js&lt;/strong&gt;, understanding why it was designed the way it was and the benefits it brings. After that, we&amp;rsquo;ll walk through the &lt;strong&gt;most crucial core concepts&lt;/strong&gt; essential for getting started and effectively utilizing this powerful framework.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
